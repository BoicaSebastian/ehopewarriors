{"version":3,"sources":["webpack://eHopeWarriors/./src/templates/post-list/style.js","webpack://eHopeWarriors/./src/templates/post-list/index.js"],"names":["BlogDetailsArea","styled","device","BlogPostContentArea","location","data","pageContext","listBlogData","allMarkdownRemark","edges","currentPage","numberOfPages","title","pathname","isBlogPost","Container","Row","Col","lg","map","blog","i","key","node","frontmatter","thume_image","categories","body","excerpt","date","slug","fields","postAuthor","author"],"mappings":"+RAEaA,EAAkBC,aAAH,4MAEtBC,YAGAA,WAGAA,aAKOC,EAAsBF,SAAH,uEAC1BC,Y,8CCkGN,EAvGiB,SAAC,GAA+C,IAA7CE,EAA4C,EAA5CA,SAAUC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAC1BC,IADsD,YACvCF,EAAKG,kBAAkBC,OACpCC,EAA+BJ,EAA/BI,YAAaC,EAAkBL,EAAlBK,cAErB,OACI,QAAC,IAAD,MACI,QAAC,IAAD,CACIC,MAAO,yDACPC,SAAS,IACTC,YAAU,KAEd,QAAC,IAAD,CACIR,YAAaA,EACbF,SAAUA,EACVQ,MAAM,eAEV,QAACZ,EAAD,MACI,QAACe,EAAA,EAAD,MACI,QAACC,EAAA,EAAD,MACI,QAACC,EAAA,EAAD,CAAKC,GAAI,IACL,QAACf,EAAD,KACKI,GACGA,EAAaY,KAAI,SAACC,EAAMC,GACpB,OACI,QAAC,IAAD,CACIC,IAAKD,EACLT,MACIQ,EAAKG,KAAKC,YAAYZ,MAE1Ba,YACIL,EAAKG,KAAKC,YACLC,YAETC,WACIN,EAAKG,KAAKC,YACLE,WAETC,KAAMP,EAAKG,KAAKK,QAChBC,KACIT,EAAKG,KAAKC,YAAYK,KAE1BC,KAAMV,EAAKG,KAAKQ,OAAOD,KACvBE,WACIZ,EAAKG,KAAKC,YAAYS,cAO9C,QAAC,IAAD,CACIvB,YAAaA,EACbC,cAAeA,MAGvB,QAACM,EAAA,EAAD,CAAKC,GAAI,IACL,QAAC,IAAD","file":"component---src-templates-post-list-index-js-19370406ba53cf2f7119.js","sourcesContent":["import styled, { device } from \"@theme/utils\";\n\nexport const BlogDetailsArea = styled.section`\n    padding: 70px 0 280px;\n    ${device.medium} {\n        padding: 100px 0 300px;\n    }\n    ${device.large} {\n        padding: 120px 0 300px;\n    }\n    ${device.xlarge} {\n        padding: 150px 0 390px;\n    }\n`;\n\nexport const BlogPostContentArea = styled.div`\n    ${device.large} {\n        padding-right: 50px;\n    }\n`;\n","import PropTypes from \"prop-types\";\nimport Layout from \"@layout\";\nimport SEO from \"@components/seo\";\nimport PageBreadcrumb from \"../../components/pagebreadcrumb\";\nimport { graphql } from \"gatsby\";\nimport { Row, Container, Col } from \"react-bootstrap\";\nimport BlogSidebar from \"@containers/blog/blog-sideber\";\nimport BlogList from \"../../components/blog/list-blog\";\nimport PaginationLinks from \"../../components/pagination\";\nimport { BlogPostContentArea, BlogDetailsArea } from \"./style\";\n\nconst PostList = ({ location, data, pageContext, ...props }) => {\n    const listBlogData = data.allMarkdownRemark.edges;\n    const { currentPage, numberOfPages } = pageContext;\n\n    return (\n        <Layout>\n            <SEO\n                title={\"Page 2 of 6 - Collections, News, Tips by eHopeWarriors\"}\n                pathname=\"/\"\n                isBlogPost\n            />\n            <PageBreadcrumb\n                pageContext={pageContext}\n                location={location}\n                title=\"Blog Post\"\n            />\n            <BlogDetailsArea>\n                <Container>\n                    <Row>\n                        <Col lg={8}>\n                            <BlogPostContentArea>\n                                {listBlogData &&\n                                    listBlogData.map((blog, i) => {\n                                        return (\n                                            <BlogList\n                                                key={i}\n                                                title={\n                                                    blog.node.frontmatter.title\n                                                }\n                                                thume_image={\n                                                    blog.node.frontmatter\n                                                        .thume_image\n                                                }\n                                                categories={\n                                                    blog.node.frontmatter\n                                                        .categories\n                                                }\n                                                body={blog.node.excerpt}\n                                                date={\n                                                    blog.node.frontmatter.date\n                                                }\n                                                slug={blog.node.fields.slug}\n                                                postAuthor={\n                                                    blog.node.frontmatter.author\n                                                }\n                                            />\n                                        );\n                                    })}\n                            </BlogPostContentArea>\n\n                            <PaginationLinks\n                                currentPage={currentPage}\n                                numberOfPages={numberOfPages}\n                            />\n                        </Col>\n                        <Col lg={4}>\n                            <BlogSidebar />\n                        </Col>\n                    </Row>\n                </Container>\n            </BlogDetailsArea>\n        </Layout>\n    );\n};\n\nPostList.propTypes = {\n    data: PropTypes.object,\n    location: PropTypes.object,\n    pageContext: PropTypes.object,\n};\n\nexport const PlstListQuery = graphql`\n    query postListQuery($skip: Int!, $limit: Int!) {\n        allMarkdownRemark(\n            sort: { fields: [frontmatter___date], order: DESC }\n            limit: $limit\n            skip: $skip\n        ) {\n            edges {\n                node {\n                    id\n                    frontmatter {\n                        author\n                        categories\n                        date(formatString: \"MMMM DD YYYY\")\n                        tags\n                        quote_text\n                        title\n                        thume_image {\n                            childImageSharp {\n                                gatsbyImageData(width: 750, height: 400)\n                            }\n                        }\n                    }\n                    fields {\n                        slug\n                    }\n                    excerpt(pruneLength: 100, truncate: true)\n                }\n            }\n        }\n    }\n`;\nexport default PostList;\n"],"sourceRoot":""}